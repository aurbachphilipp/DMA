-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dma_demo_v_tpg_0_2_tpgPatternDPColorSquare is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    y : IN STD_LOGIC_VECTOR (15 downto 0);
    x : IN STD_LOGIC_VECTOR (15 downto 0);
    color : IN STD_LOGIC_VECTOR (7 downto 0);
    dpDynamicRange : IN STD_LOGIC_VECTOR (7 downto 0);
    dpYUVCoef : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of dma_demo_v_tpg_0_2_tpgPatternDPColorSquare is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv10_3F : STD_LOGIC_VECTOR (9 downto 0) := "0000111111";
    constant ap_const_lv10_3C1 : STD_LOGIC_VECTOR (9 downto 0) := "1111000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal vBarSel_1 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal yCount_V_1 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal hBarSel_1 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal xCount_V_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal DPtpgBarArray_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal DPtpgBarArray_ce0 : STD_LOGIC;
    signal DPtpgBarArray_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelRgb_VESA_r_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelRgb_VESA_r_ce0 : STD_LOGIC;
    signal DPtpgBarSelRgb_VESA_r_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal DPtpgBarSelRgb_VESA_g_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelRgb_VESA_g_ce0 : STD_LOGIC;
    signal DPtpgBarSelRgb_VESA_g_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal DPtpgBarSelRgb_VESA_b_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelRgb_VESA_b_ce0 : STD_LOGIC;
    signal DPtpgBarSelRgb_VESA_b_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal DPtpgBarSelRgb_CEA_r_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelRgb_CEA_r_ce0 : STD_LOGIC;
    signal DPtpgBarSelRgb_CEA_r_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal DPtpgBarSelRgb_CEA_g_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelRgb_CEA_g_ce0 : STD_LOGIC;
    signal DPtpgBarSelRgb_CEA_g_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal DPtpgBarSelRgb_CEA_b_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelRgb_CEA_b_ce0 : STD_LOGIC;
    signal DPtpgBarSelRgb_CEA_b_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal DPtpgBarSelYuv_601_y_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelYuv_601_y_ce0 : STD_LOGIC;
    signal DPtpgBarSelYuv_601_y_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelYuv_601_v_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelYuv_601_v_ce0 : STD_LOGIC;
    signal DPtpgBarSelYuv_601_v_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelYuv_709_y_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelYuv_709_y_ce0 : STD_LOGIC;
    signal DPtpgBarSelYuv_709_y_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelYuv_709_v_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelYuv_709_v_ce0 : STD_LOGIC;
    signal DPtpgBarSelYuv_709_v_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelYuv_601_u_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelYuv_601_u_ce0 : STD_LOGIC;
    signal DPtpgBarSelYuv_601_u_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelYuv_709_u_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelYuv_709_u_ce0 : STD_LOGIC;
    signal DPtpgBarSelYuv_709_u_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1716_fu_313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1716_reg_747 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1716_1_fu_325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1716_1_reg_752 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp41_fu_337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp106_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1765_fu_361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1765_reg_769 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1765_reg_769_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1765_reg_769_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1765_reg_769_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_60_fu_373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1728_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1721_fu_399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1745_fu_470_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln878_1_fu_452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal DPtpgBarSelRgb_VESA_r_load_reg_880 : STD_LOGIC_VECTOR (1 downto 0);
    signal DPtpgBarSelRgb_VESA_g_load_reg_885 : STD_LOGIC_VECTOR (1 downto 0);
    signal DPtpgBarSelRgb_VESA_b_load_reg_890 : STD_LOGIC_VECTOR (1 downto 0);
    signal DPtpgBarSelYuv_709_y_load_reg_895 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelYuv_709_v_load_reg_900 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelYuv_709_u_load_reg_905 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1765_3_fu_630_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1765_3_reg_910 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln1765_2_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1765_2_reg_915 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1765_8_fu_660_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1765_8_reg_922 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1765_12_fu_676_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1765_12_reg_927 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_vBarSel_3_loc_0_reg_281 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_vBarSel_3_loc_0_reg_281 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_vBarSel_3_loc_0_reg_281 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_hBarSel_5_loc_0_reg_296 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_reg_pp0_iter1_hBarSel_5_loc_0_reg_296 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_reg_pp0_iter2_hBarSel_5_loc_0_reg_296 : STD_LOGIC_VECTOR (2 downto 0);
    signal idxprom45_fu_524_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom47_fu_529_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln691_fu_422_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln692_fu_458_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln691_fu_488_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln1716_fu_319_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1716_fu_309_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1765_fu_355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_367_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln878_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln878_fu_448_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln691_1_fu_482_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln_fu_504_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln1748_fu_512_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_516_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sel_tmp5_fu_561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1765_fu_571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp16_demorgan_fu_587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp16_fu_591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1765_3_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1765_2_fu_582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1765_1_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal val_assign_3_cast_fu_545_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp3_fu_557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1765_fu_610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1765_fu_602_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1765_1_fu_616_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln1765_1_fu_624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal val_assign_4_cast_fu_549_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1765_5_fu_644_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1765_6_fu_652_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal val_assign_5_cast_fu_553_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1765_10_fu_668_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal val_assign_cast_fu_684_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1765_2_fu_693_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal val_assign_1_cast_fu_687_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1765_7_fu_705_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal val_assign_2_cast_fu_690_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1765_11_fu_717_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1765_4_fu_699_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1765_9_fu_711_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1765_13_fu_723_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to4 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_62 : BOOLEAN;
    signal ap_condition_289 : BOOLEAN;
    signal ap_condition_223 : BOOLEAN;
    signal ap_condition_633 : BOOLEAN;
    signal ap_condition_637 : BOOLEAN;
    signal ap_condition_178 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarArray IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarSelRgb_VESA_r IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarSelRgb_VESA_g IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarSelRgb_VESA_b IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarSelRgb_CEA_r IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarSelRgb_CEA_g IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarSelRgb_CEA_b IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarSelYuv_601_y IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarSelYuv_601_v IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarSelYuv_709_y IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarSelYuv_709_v IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarSelYuv_601_u IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarSelYuv_709_u IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    DPtpgBarArray_U : component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarArray
    generic map (
        DataWidth => 3,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarArray_address0,
        ce0 => DPtpgBarArray_ce0,
        q0 => DPtpgBarArray_q0);

    DPtpgBarSelRgb_VESA_r_U : component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarSelRgb_VESA_r
    generic map (
        DataWidth => 2,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelRgb_VESA_r_address0,
        ce0 => DPtpgBarSelRgb_VESA_r_ce0,
        q0 => DPtpgBarSelRgb_VESA_r_q0);

    DPtpgBarSelRgb_VESA_g_U : component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarSelRgb_VESA_g
    generic map (
        DataWidth => 2,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelRgb_VESA_g_address0,
        ce0 => DPtpgBarSelRgb_VESA_g_ce0,
        q0 => DPtpgBarSelRgb_VESA_g_q0);

    DPtpgBarSelRgb_VESA_b_U : component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarSelRgb_VESA_b
    generic map (
        DataWidth => 2,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelRgb_VESA_b_address0,
        ce0 => DPtpgBarSelRgb_VESA_b_ce0,
        q0 => DPtpgBarSelRgb_VESA_b_q0);

    DPtpgBarSelRgb_CEA_r_U : component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarSelRgb_CEA_r
    generic map (
        DataWidth => 6,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelRgb_CEA_r_address0,
        ce0 => DPtpgBarSelRgb_CEA_r_ce0,
        q0 => DPtpgBarSelRgb_CEA_r_q0);

    DPtpgBarSelRgb_CEA_g_U : component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarSelRgb_CEA_g
    generic map (
        DataWidth => 6,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelRgb_CEA_g_address0,
        ce0 => DPtpgBarSelRgb_CEA_g_ce0,
        q0 => DPtpgBarSelRgb_CEA_g_q0);

    DPtpgBarSelRgb_CEA_b_U : component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarSelRgb_CEA_b
    generic map (
        DataWidth => 6,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelRgb_CEA_b_address0,
        ce0 => DPtpgBarSelRgb_CEA_b_ce0,
        q0 => DPtpgBarSelRgb_CEA_b_q0);

    DPtpgBarSelYuv_601_y_U : component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarSelYuv_601_y
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelYuv_601_y_address0,
        ce0 => DPtpgBarSelYuv_601_y_ce0,
        q0 => DPtpgBarSelYuv_601_y_q0);

    DPtpgBarSelYuv_601_v_U : component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarSelYuv_601_v
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelYuv_601_v_address0,
        ce0 => DPtpgBarSelYuv_601_v_ce0,
        q0 => DPtpgBarSelYuv_601_v_q0);

    DPtpgBarSelYuv_709_y_U : component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarSelYuv_709_y
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelYuv_709_y_address0,
        ce0 => DPtpgBarSelYuv_709_y_ce0,
        q0 => DPtpgBarSelYuv_709_y_q0);

    DPtpgBarSelYuv_709_v_U : component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarSelYuv_709_v
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelYuv_709_v_address0,
        ce0 => DPtpgBarSelYuv_709_v_ce0,
        q0 => DPtpgBarSelYuv_709_v_q0);

    DPtpgBarSelYuv_601_u_U : component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarSelYuv_601_u
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelYuv_601_u_address0,
        ce0 => DPtpgBarSelYuv_601_u_ce0,
        q0 => DPtpgBarSelYuv_601_u_q0);

    DPtpgBarSelYuv_709_u_U : component dma_demo_v_tpg_0_2_tpgPatternDPColorSquare_DPtpgBarSelYuv_709_u
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelYuv_709_u_address0,
        ce0 => DPtpgBarSelYuv_709_u_ce0,
        q0 => DPtpgBarSelYuv_709_u_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_hBarSel_5_loc_0_reg_296_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_62)) then
                if ((icmp_ln1716_fu_313_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_hBarSel_5_loc_0_reg_296 <= ap_const_lv3_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_hBarSel_5_loc_0_reg_296 <= ap_phi_reg_pp0_iter0_hBarSel_5_loc_0_reg_296;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_vBarSel_3_loc_0_reg_281_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_62)) then
                if ((icmp_ln1716_1_fu_325_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_vBarSel_3_loc_0_reg_281 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_vBarSel_3_loc_0_reg_281 <= ap_phi_reg_pp0_iter0_vBarSel_3_loc_0_reg_281;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_hBarSel_5_loc_0_reg_296_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_289)) then
                if (((icmp_ln878_1_fu_452_p2 = ap_const_lv1_0) and (icmp_ln1716_reg_747 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_hBarSel_5_loc_0_reg_296 <= add_ln1745_fu_470_p2;
                elsif (((icmp_ln878_1_fu_452_p2 = ap_const_lv1_1) and (icmp_ln1716_reg_747 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_hBarSel_5_loc_0_reg_296 <= hBarSel_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_hBarSel_5_loc_0_reg_296 <= ap_phi_reg_pp0_iter1_hBarSel_5_loc_0_reg_296;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_vBarSel_3_loc_0_reg_281_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln1721_fu_399_p2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1716_1_reg_752 = ap_const_lv1_0) and (icmp_ln1716_reg_747 = ap_const_lv1_1))) then 
                ap_phi_reg_pp0_iter2_vBarSel_3_loc_0_reg_281 <= xor_ln1728_fu_410_p2;
            elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln1721_fu_399_p2) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1716_1_reg_752 = ap_const_lv1_0)) or ((ap_const_lv1_0 = and_ln1721_fu_399_p2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1716_1_reg_752 = ap_const_lv1_0) and (icmp_ln1716_reg_747 = ap_const_lv1_0)))) then 
                ap_phi_reg_pp0_iter2_vBarSel_3_loc_0_reg_281 <= vBarSel_1;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ap_phi_reg_pp0_iter2_vBarSel_3_loc_0_reg_281 <= ap_phi_reg_pp0_iter1_vBarSel_3_loc_0_reg_281;
            end if; 
        end if;
    end process;

    hBarSel_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_289)) then
                if ((icmp_ln1716_reg_747 = ap_const_lv1_1)) then 
                    hBarSel_1 <= ap_const_lv3_0;
                elsif (((icmp_ln878_1_fu_452_p2 = ap_const_lv1_0) and (icmp_ln1716_reg_747 = ap_const_lv1_0))) then 
                    hBarSel_1 <= add_ln1745_fu_470_p2;
                end if;
            end if; 
        end if;
    end process;

    vBarSel_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_289)) then
                if ((icmp_ln1716_1_reg_752 = ap_const_lv1_1)) then 
                    vBarSel_1 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_condition_223)) then 
                    vBarSel_1 <= xor_ln1728_fu_410_p2;
                end if;
            end if; 
        end if;
    end process;

    xCount_V_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_178)) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln1716_fu_313_p2 = ap_const_lv1_1))) then 
                    xCount_V_1 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_condition_637)) then 
                    xCount_V_1 <= zext_ln691_fu_488_p1;
                elsif ((ap_const_boolean_1 = ap_condition_633)) then 
                    xCount_V_1 <= add_ln692_fu_458_p2;
                end if;
            end if; 
        end if;
    end process;

    yCount_V_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln1721_fu_399_p2) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1716_1_reg_752 = ap_const_lv1_0))) then 
                yCount_V_1 <= add_ln691_fu_422_p2;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln1716_1_fu_325_p2 = ap_const_lv1_1)) or ((ap_const_lv1_0 = and_ln1721_fu_399_p2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1716_1_reg_752 = ap_const_lv1_0) and (icmp_ln1716_reg_747 = ap_const_lv1_1)))) then 
                yCount_V_1 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (empty_60_fu_373_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_ce))) then
                DPtpgBarSelRgb_VESA_b_load_reg_890 <= DPtpgBarSelRgb_VESA_b_q0;
                DPtpgBarSelRgb_VESA_g_load_reg_885 <= DPtpgBarSelRgb_VESA_g_q0;
                DPtpgBarSelRgb_VESA_r_load_reg_880 <= DPtpgBarSelRgb_VESA_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (empty_60_fu_373_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce))) then
                DPtpgBarSelYuv_709_u_load_reg_905 <= DPtpgBarSelYuv_709_u_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then
                DPtpgBarSelYuv_709_v_load_reg_900 <= DPtpgBarSelYuv_709_v_q0;
                DPtpgBarSelYuv_709_y_load_reg_895 <= DPtpgBarSelYuv_709_y_q0;
                and_ln1765_reg_769_pp0_iter2_reg <= and_ln1765_reg_769_pp0_iter1_reg;
                and_ln1765_reg_769_pp0_iter3_reg <= and_ln1765_reg_769_pp0_iter2_reg;
                or_ln1765_2_reg_915 <= or_ln1765_2_fu_638_p2;
                select_ln1765_12_reg_927 <= select_ln1765_12_fu_676_p3;
                select_ln1765_3_reg_910 <= select_ln1765_3_fu_630_p3;
                select_ln1765_8_reg_922 <= select_ln1765_8_fu_660_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln1765_reg_769 <= and_ln1765_fu_361_p2;
                and_ln1765_reg_769_pp0_iter1_reg <= and_ln1765_reg_769;
                icmp_ln1716_1_reg_752 <= icmp_ln1716_1_fu_325_p2;
                icmp_ln1716_reg_747 <= icmp_ln1716_fu_313_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    DPtpgBarArray_address0 <= idxprom45_fu_524_p1(4 - 1 downto 0);

    DPtpgBarArray_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            DPtpgBarArray_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarArray_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelRgb_CEA_b_address0 <= idxprom47_fu_529_p1(3 - 1 downto 0);

    DPtpgBarSelRgb_CEA_b_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            DPtpgBarSelRgb_CEA_b_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelRgb_CEA_b_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelRgb_CEA_g_address0 <= idxprom47_fu_529_p1(3 - 1 downto 0);

    DPtpgBarSelRgb_CEA_g_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            DPtpgBarSelRgb_CEA_g_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelRgb_CEA_g_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelRgb_CEA_r_address0 <= idxprom47_fu_529_p1(3 - 1 downto 0);

    DPtpgBarSelRgb_CEA_r_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            DPtpgBarSelRgb_CEA_r_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelRgb_CEA_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelRgb_VESA_b_address0 <= idxprom47_fu_529_p1(3 - 1 downto 0);

    DPtpgBarSelRgb_VESA_b_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            DPtpgBarSelRgb_VESA_b_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelRgb_VESA_b_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelRgb_VESA_g_address0 <= idxprom47_fu_529_p1(3 - 1 downto 0);

    DPtpgBarSelRgb_VESA_g_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            DPtpgBarSelRgb_VESA_g_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelRgb_VESA_g_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelRgb_VESA_r_address0 <= idxprom47_fu_529_p1(3 - 1 downto 0);

    DPtpgBarSelRgb_VESA_r_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            DPtpgBarSelRgb_VESA_r_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelRgb_VESA_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelYuv_601_u_address0 <= idxprom47_fu_529_p1(3 - 1 downto 0);

    DPtpgBarSelYuv_601_u_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            DPtpgBarSelYuv_601_u_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelYuv_601_u_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelYuv_601_v_address0 <= idxprom47_fu_529_p1(3 - 1 downto 0);

    DPtpgBarSelYuv_601_v_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            DPtpgBarSelYuv_601_v_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelYuv_601_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelYuv_601_y_address0 <= idxprom47_fu_529_p1(3 - 1 downto 0);

    DPtpgBarSelYuv_601_y_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            DPtpgBarSelYuv_601_y_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelYuv_601_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelYuv_709_u_address0 <= idxprom47_fu_529_p1(3 - 1 downto 0);

    DPtpgBarSelYuv_709_u_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            DPtpgBarSelYuv_709_u_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelYuv_709_u_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelYuv_709_v_address0 <= idxprom47_fu_529_p1(3 - 1 downto 0);

    DPtpgBarSelYuv_709_v_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            DPtpgBarSelYuv_709_v_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelYuv_709_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelYuv_709_y_address0 <= idxprom47_fu_529_p1(3 - 1 downto 0);

    DPtpgBarSelYuv_709_y_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            DPtpgBarSelYuv_709_y_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelYuv_709_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln1745_fu_470_p2 <= std_logic_vector(unsigned(hBarSel_1) + unsigned(ap_const_lv3_1));
    add_ln691_1_fu_482_p2 <= std_logic_vector(unsigned(trunc_ln878_fu_448_p1) + unsigned(ap_const_lv6_1));
    add_ln691_fu_422_p2 <= std_logic_vector(unsigned(yCount_V_1) + unsigned(ap_const_lv6_1));
    add_ln692_fu_458_p2 <= std_logic_vector(unsigned(xCount_V_1) + unsigned(ap_const_lv10_3C1));
    and_ln1721_fu_399_p2 <= (icmp_ln878_fu_393_p2 and icmp_ln1716_reg_747);
    and_ln1765_1_fu_576_p2 <= (xor_ln1765_fu_571_p2 and sel_tmp6_fu_566_p2);
    and_ln1765_2_fu_582_p2 <= (sel_tmp6_fu_566_p2 and and_ln1765_reg_769_pp0_iter3_reg);
    and_ln1765_3_fu_597_p2 <= (sel_tmp16_fu_591_p2 and and_ln1765_reg_769_pp0_iter3_reg);
    and_ln1765_fu_361_p2 <= (trunc_ln1716_fu_309_p1 and icmp_ln1765_fu_355_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_178_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
                ap_condition_178 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_223_assign_proc : process(icmp_ln1716_reg_747, icmp_ln1716_1_reg_752, and_ln1721_fu_399_p2)
    begin
                ap_condition_223 <= ((ap_const_lv1_0 = and_ln1721_fu_399_p2) and (icmp_ln1716_1_reg_752 = ap_const_lv1_0) and (icmp_ln1716_reg_747 = ap_const_lv1_1));
    end process;


    ap_condition_289_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_ce)
    begin
                ap_condition_289 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_62_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_ce)
    begin
                ap_condition_62 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_633_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln1716_reg_747, icmp_ln878_1_fu_452_p2)
    begin
                ap_condition_633 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln878_1_fu_452_p2 = ap_const_lv1_0) and (icmp_ln1716_reg_747 = ap_const_lv1_0));
    end process;


    ap_condition_637_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln1716_reg_747, icmp_ln878_1_fu_452_p2)
    begin
                ap_condition_637 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln878_1_fu_452_p2 = ap_const_lv1_1) and (icmp_ln1716_reg_747 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to4 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_hBarSel_5_loc_0_reg_296 <= "XXX";
    ap_phi_reg_pp0_iter0_vBarSel_3_loc_0_reg_281 <= "X";

    ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to4)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to4 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= select_ln1765_4_fu_699_p3;
    ap_return_1 <= select_ln1765_9_fu_711_p3;
    ap_return_2 <= select_ln1765_13_fu_723_p3;
    cmp106_fu_343_p2 <= "1" when (dpYUVCoef = ap_const_lv8_0) else "0";
    cmp41_fu_337_p2 <= "1" when (color = ap_const_lv8_0) else "0";
    empty_60_fu_373_p2 <= "1" when (empty_fu_367_p2 = ap_const_lv8_0) else "0";
    empty_fu_367_p2 <= (dpDynamicRange or color);
    icmp_ln1716_1_fu_325_p2 <= "1" when (or_ln1716_fu_319_p2 = ap_const_lv16_0) else "0";
    icmp_ln1716_fu_313_p2 <= "1" when (x = ap_const_lv16_0) else "0";
    icmp_ln1765_fu_355_p2 <= "0" when (color = ap_const_lv8_1) else "1";
    icmp_ln878_1_fu_452_p2 <= "1" when (unsigned(xCount_V_1) < unsigned(ap_const_lv10_3F)) else "0";
    icmp_ln878_fu_393_p2 <= "0" when (yCount_V_1 = ap_const_lv6_3F) else "1";
    idxprom45_fu_524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_516_p3),64));
    idxprom47_fu_529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(DPtpgBarArray_q0),64));
    or_ln1716_fu_319_p2 <= (y or x);
    or_ln1765_1_fu_624_p2 <= (sel_tmp3_fu_557_p2 or and_ln1765_1_fu_576_p2);
    or_ln1765_2_fu_638_p2 <= (or_ln1765_fu_610_p2 or or_ln1765_1_fu_624_p2);
    or_ln1765_fu_610_p2 <= (and_ln1765_3_fu_597_p2 or and_ln1765_2_fu_582_p2);
    or_ln_fu_504_p3 <= (ap_phi_reg_pp0_iter2_vBarSel_3_loc_0_reg_281 & ap_phi_reg_pp0_iter2_hBarSel_5_loc_0_reg_296);
    sel_tmp16_demorgan_fu_587_p2 <= (cmp41_fu_337_p2 or cmp106_fu_343_p2);
    sel_tmp16_fu_591_p2 <= (sel_tmp16_demorgan_fu_587_p2 xor ap_const_lv1_1);
    sel_tmp2_fu_379_p2 <= "0" when (dpDynamicRange = ap_const_lv8_0) else "1";
    sel_tmp3_fu_557_p2 <= (sel_tmp2_fu_379_p2 and cmp41_fu_337_p2);
    sel_tmp5_fu_561_p2 <= (cmp41_fu_337_p2 xor ap_const_lv1_1);
    sel_tmp6_fu_566_p2 <= (sel_tmp5_fu_561_p2 and cmp106_fu_343_p2);
    select_ln1765_10_fu_668_p3 <= 
        DPtpgBarSelYuv_601_v_q0 when (and_ln1765_1_fu_576_p2(0) = '1') else 
        val_assign_5_cast_fu_553_p1;
    select_ln1765_11_fu_717_p3 <= 
        val_assign_2_cast_fu_690_p1 when (empty_60_fu_373_p2(0) = '1') else 
        DPtpgBarSelYuv_709_v_load_reg_900;
    select_ln1765_12_fu_676_p3 <= 
        select_ln1765_5_fu_644_p3 when (or_ln1765_fu_610_p2(0) = '1') else 
        select_ln1765_10_fu_668_p3;
    select_ln1765_13_fu_723_p3 <= 
        select_ln1765_12_reg_927 when (or_ln1765_2_reg_915(0) = '1') else 
        select_ln1765_11_fu_717_p3;
    select_ln1765_1_fu_616_p3 <= 
        DPtpgBarSelYuv_601_y_q0 when (and_ln1765_1_fu_576_p2(0) = '1') else 
        val_assign_3_cast_fu_545_p1;
    select_ln1765_2_fu_693_p3 <= 
        val_assign_cast_fu_684_p1 when (empty_60_fu_373_p2(0) = '1') else 
        DPtpgBarSelYuv_709_y_load_reg_895;
    select_ln1765_3_fu_630_p3 <= 
        select_ln1765_fu_602_p3 when (or_ln1765_fu_610_p2(0) = '1') else 
        select_ln1765_1_fu_616_p3;
    select_ln1765_4_fu_699_p3 <= 
        select_ln1765_3_reg_910 when (or_ln1765_2_reg_915(0) = '1') else 
        select_ln1765_2_fu_693_p3;
    select_ln1765_5_fu_644_p3 <= 
        DPtpgBarSelYuv_709_v_q0 when (and_ln1765_3_fu_597_p2(0) = '1') else 
        DPtpgBarSelYuv_601_v_q0;
    select_ln1765_6_fu_652_p3 <= 
        DPtpgBarSelYuv_601_u_q0 when (and_ln1765_1_fu_576_p2(0) = '1') else 
        val_assign_4_cast_fu_549_p1;
    select_ln1765_7_fu_705_p3 <= 
        val_assign_1_cast_fu_687_p1 when (empty_60_fu_373_p2(0) = '1') else 
        DPtpgBarSelYuv_709_u_load_reg_905;
    select_ln1765_8_fu_660_p3 <= 
        select_ln1765_5_fu_644_p3 when (or_ln1765_fu_610_p2(0) = '1') else 
        select_ln1765_6_fu_652_p3;
    select_ln1765_9_fu_711_p3 <= 
        select_ln1765_8_reg_922 when (or_ln1765_2_reg_915(0) = '1') else 
        select_ln1765_7_fu_705_p3;
    select_ln1765_fu_602_p3 <= 
        DPtpgBarSelYuv_709_y_q0 when (and_ln1765_3_fu_597_p2(0) = '1') else 
        DPtpgBarSelYuv_601_y_q0;
    tmp_1_fu_516_p3 <= (ap_const_lv3_0 & zext_ln1748_fu_512_p1);
    trunc_ln1716_fu_309_p1 <= x(1 - 1 downto 0);
    trunc_ln878_fu_448_p1 <= xCount_V_1(6 - 1 downto 0);
        val_assign_1_cast_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(DPtpgBarSelRgb_VESA_g_load_reg_885),8));

        val_assign_2_cast_fu_690_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(DPtpgBarSelRgb_VESA_b_load_reg_890),8));

        val_assign_3_cast_fu_545_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(DPtpgBarSelRgb_CEA_r_q0),8));

        val_assign_4_cast_fu_549_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(DPtpgBarSelRgb_CEA_g_q0),8));

        val_assign_5_cast_fu_553_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(DPtpgBarSelRgb_CEA_b_q0),8));

        val_assign_cast_fu_684_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(DPtpgBarSelRgb_VESA_r_load_reg_880),8));

    xor_ln1728_fu_410_p2 <= (vBarSel_1 xor ap_const_lv1_1);
    xor_ln1765_fu_571_p2 <= (ap_const_lv1_1 xor and_ln1765_reg_769_pp0_iter3_reg);
    zext_ln1748_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_fu_504_p3),8));
    zext_ln691_fu_488_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_1_fu_482_p2),10));
end behav;
